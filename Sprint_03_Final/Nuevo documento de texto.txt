estoy con express
en mi app.mjs tengo este codigo:

import express from 'express';
import { connectDB } from './config/dbConfig.mjs';
import superheroesRoutes from './routes/superHeroRoutes.mjs';

const app = express();
app.set('view engine', 'ejs');
app.use(express.json());

const PORT = 3000;
connectDB();

app.use('/api', superheroesRoutes);

app.use((req, res) => {
  res.status(404).send({ error: 'Ruta no encontrada' });
});

app.listen(PORT, () => {
  console.log(`Servidor escuchando en el puerto ${PORT}`);
  console.log(`Servidor Carriendo en http://localhost:${PORT}`);
  console.log(`Ctrl+C para bajar servidor`);
});

al ejecutar en el navegador pongo la url http://localhost:3000\api\heroes y me muestra el listado de los superheroes y en esa vista tiene un boton que me llama aun formulario para registrar un nuevo superheroe y este es el formulario /views/addSuperheroe.ejs:
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Diplomatura</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  </head>
  <body>
    <%- include('partials/header')  %>
    <div class="card">
        <h5 class="card-header">Insertar</h5>
        <div class="card-body">
          <h5 class="card-title">Nuevo Superhéroe</h5>
                    
          <div class="container mt-5">
            <p class="card-text">Por favor complete los datos del formulario</p>
              <form action="/api/heroe/crear" method="POST">
             <!--  <form action="/api/test" method="post"> -->

              <% if (errores && errores.length > 0) { %>
                <div class="alert alert-danger">
                  <ul>
                    <% errores.forEach(error => { %>
                      <li><%= error.msg %></li>
                    <% }) %>
                  </ul>
                </div>
              <% } %>

              <div class="mb-3">
                <label for="nombreSuperHeroe" class="form-label">Nombre del Superhéroe*</label>
                <input type="text" id="nombreSuperHeroe" name="nombreSuperHeroe" class="form-control" 
                  value="<%= datos.nombreSuperHeroe || '' %>" required>
              </div>

              <!-- Nombre Real -->
              <div class="mb-3">
                <label for="nombreReal" class="form-label">Nombre Real*</label>
                <input type="text" id="nombreReal" name="nombreReal" class="form-control" required>
              </div>
              
              <!-- Edad -->
              <div class="mb-3">
                <label for="edad" class="form-label">Edad</label>
                <input type="number" id="edad" name="edad" class="form-control" min="0">
              </div>
              
              <!-- Planeta de Origen -->
              <div class="mb-3">
                <label for="planetaOrigen" class="form-label">Planeta de Origen</label>
                <input type="text" id="planetaOrigen" name="planetaOrigen" class="form-control" placeholder="Desconocido">
              </div>
              
              <!-- Debilidad -->
              <div class="mb-3">
                <label for="debilidad" class="form-label">Debilidad</label>
                <input type="text" id="debilidad" name="debilidad" class="form-control">
              </div>
              
              <!-- Poderes -->
              <div class="mb-3">
                <label for="poderes" class="form-label">Poderes (separados por coma)</label>
                <input type="text" id="poderes" name="poderes" class="form-control" placeholder="Ejemplo: Fuerza, Vuelo">
              </div>
              
              <!-- Aliados -->
              <div class="mb-3">
                <label for="aliados" class="form-label">Aliados (separados por coma)</label>
                <input type="text" id="aliados" name="aliados" class="form-control" placeholder="Ejemplo: Batman, Robin">
              </div>
              
              <!-- Enemigos -->
              <div class="mb-3">
                <label for="enemigos" class="form-label">Enemigos (separados por coma)</label>
                <input type="text" id="enemigos" name="enemigos" class="form-control" placeholder="Ejemplo: Joker, Lex Luthor">
              </div>
              
              <!-- Botón de enviar -->
              <button type="submit" class="btn btn-outline-primary">Registrar Superhéroe</button>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
              <a href="/api/heroe" class="btn btn-outline-secondary">Cancelar</a>
            </form>            
          </div>            
        </div>        
      </div>            
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
  </body>
</html>

al presionar el boton Registrar Superhéroe, no me graba nada, puse un console.log con req.body y me muestra llaves vacias {}.

se supene que debe disparar el endpoint /routes/superHeroRoutes.mjs:  
router.post('/heroe/crear', (req, res, next) => {
  console.log("Daos", req.body); // Muestra los datos enviados desde el formulario
  next();
}, superheroesValidaciones(), manejadorValidacionErrores, insertSuperHeroesController);


este es el archivo /validations/superHeroesValidations.mjs:
  const superheroesValidaciones =() => [
    body('nombreSuperHeroe')
      .notEmpty().withMessage('El nombre del superhéroe es requerido')
      .isLength({ min: 3, max: 60 }).withMessage('El nombre del Superheroe debe tener entre 3 y 60 caracteres')
      .trim()
      .escape(),
    body('nombreReal')
      .notEmpty().withMessage('El nombre Real del superhéroe es requerido')
      .isLength({ min: 3, max: 60 }).withMessage('El nombre Real debe tener entre 3 y 60 caracteres')
      .trim()
      .escape(),
    body('edad')
      .notEmpty().withMessage('La edad en años es requerida')
      .isNumeric().withMessage('La edad en años debe ser numérica')
      .custom((value) => value >= 0).withMessage('La mínima edad en años es cero'),
    body('poderes')
      .notEmpty().withMessage('Poderes es un dato requerido, no puede estar vacío')
      .isArray().withMessage('Poderes debe ser un tipo de dato array')
      .custom((value) => value.every(p => p.length >= 3 && p.length <= 60))
      .withMessage('Cada poder debe tener entre 3 y 60 caracteres')
      .trim()
      .escape()
  ];
  
  export default superheroesValidaciones;

este es el archivo /middlewares/errorMiddleware.mjs:
import { validationResult } from 'express-validator';

export const manejadorValidacionErrores = (req, res, next) => {
  const errores = validationResult(req);
  if (!errores.isEmpty()) {
    // Renderizar la vista de formulario con los errores
    return res.status(400).render('addSuperheroe', {
      errores: errores.array(), // Pasamos el array de errores a la vista
      datos: req.body, // Pasamos los datos enviados para mantenerlos en el formulario
    });
  }
  next();
};

y el archivo /controllers/superheroesController.mjs:
export const insertSuperHeroesController = async (req, res) => {
  console.log("Entro a insertSuperHeroesController");
  try {
    const nuevoSuperHeroe = new SuperHeroe(req.body);
    await nuevoSuperHeroe.save();
    res.redirect('/api/heroe/crear');
  } catch (error) {
    res.status(500).send('Error al guardar el superhéroe');
  }
};

por favor me ayudas a resolver.